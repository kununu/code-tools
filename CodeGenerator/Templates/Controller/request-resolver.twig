{% set requestDto = files.getFileByType("request-dto") %}
{% set validationException = files.getFileByType("validation-exception") %}
<?php
declare(strict_types=1);

namespace {{ file.namespace }};

use {{ requestDto.fqcn }};
use {{ validationException.fqcn }} as ApplicationValidationException;
use Kununu\Utilities\Validator\Exception\ValidationException;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpKernel\Controller\ValueResolverInterface;
use Symfony\Component\HttpKernel\ControllerMetadata\ArgumentMetadata;

final readonly class {{ file.className }} implements ValueResolverInterface
{
    public function resolve(Request $request, ArgumentMetadata $argument): iterable
    {
        $argumentType = $argument->getType();
        if (!$argumentType || !is_a($argumentType, {{ requestDto.className }}::class, true)) {
            return [];
        }

        try {
            return [
                {{ requestDto.className }}::fromArray($request->toArray()),
            ];
        } catch (ValidationException $exception) {
            throw new ApplicationValidationException($exception->getErrors());
        }
    }
}