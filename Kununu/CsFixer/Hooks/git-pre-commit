#!/bin/sh

if [ ! -t 1 ]; then
    RED=''
    YELLOW=''
    BLUE=''
    GREEN=''
    NC=''
else
    RED='\e[0;31m'
    YELLOW='\e[1;33m'
    BLUE='\e[0;34m'
    GREEN='\e[1;32m'
    NC='\e[0m'
fi

IS_MERGE=$(git rev-parse -q --verify MERGE_HEAD)
if [ -n "$IS_MERGE" ] ; then
    exit 0
fi

printf "${BLUE}Pre commit hook starting${NC}\n"

CHANGED_FILES=$(git diff --cached --name-only --diff-filter=ACM -- '*.php')

if [ -n "$CHANGED_FILES" ]; then
    KUNUNU_BIN_PATH="$(git rev-parse --show-toplevel)/.git/kununu"
    PHP_CS_CONFIG="$KUNUNU_BIN_PATH/.php-cs-fixer.php"
    PHP_CS_FIXER="$KUNUNU_BIN_PATH/php-cs-fixer"

    if ! [ -f "$PHP_CS_CONFIG" ]; then
        printf "${RED}Missing php-cs-fixer rules file${NC}\n"
        printf "${YELLOW}$PHP_CS_CONFIG${NC}\n"

        exit 1
    fi

    if ! [ -x "$(command -v $PHP_CS_FIXER)" ]; then
         printf "${RED}Missing php-cs-fixer or php executable${NC}\n"

         exit 1
    fi

    OUTPUT="$($PHP_CS_FIXER fix --config "$PHP_CS_CONFIG" $CHANGED_FILES)"
    case $OUTPUT in
        *"1) "*)
          printf "${GREEN}[POLICY]${NC}\n"
          printf "${YELLOW}${OUTPUT}${NC}\n"
          printf '%*s\n' 130 '' | tr ' ' '-'
          printf "${YELLOW}The files you are committing do not follow the code standard, fixes where applied please review/add them to your commit${NC}\n"

    	    exit 1
    esac

    # Check if files that are staged follow the standard
    for changed in $CHANGED_FILES; do
        if git show :"$changed" | $PHP_CS_FIXER fix -n --config "$PHP_CS_CONFIG" - 2>/dev/null | grep -q "1) "; then
            printf "${GREEN}[POLICY]${NC}\n"
            printf '%*s\n' 130 '' | tr ' ' '-'
            printf "${YELLOW}File ${BLUE}$changed${NC} ${YELLOW}doesn't follow the code standard, fixes where applied please review/add them to your commit${NC}\n"

            exit 1
        fi
    done
fi

printf "${BLUE}Pre commit hook finish${NC}\n"
