#!/usr/bin/env php
<?php

declare(strict_types=1);

// Set up autoloading
$autoloadPaths = [
    __DIR__ . '/../vendor/autoload.php',    // when used as a library
    __DIR__ . '/../../../autoload.php',     // when used in a project
];

$autoloaderFound = false;
foreach ($autoloadPaths as $path) {
    if (file_exists($path)) {
        require_once $path;
        $autoloaderFound = true;
        break;
    }
}

if (!$autoloaderFound) {
    fwrite(STDERR, 'No autoloader found. Please run composer install.' . PHP_EOL);
    exit(1);
}

use Kununu\CodeGenerator\Application\Command\GenerateBoilerplateCommand;
use Kununu\CodeGenerator\Application\Service\ConfigurationLoader;
use Kununu\CodeGenerator\Application\Service\OpenApiParser;
use Kununu\CodeGenerator\Infrastructure\Generator\TwigTemplateGenerator;
use Symfony\Component\Console\Application;
use Symfony\Component\Filesystem\Filesystem;

// Create dependencies
$filesystem = new Filesystem();
$configLoader = new ConfigurationLoader($filesystem);
$openApiParser = new OpenApiParser();
$codeGenerator = new TwigTemplateGenerator($filesystem);

// Create application
$application = new Application('Code Generator', '1.0.0');
$application->add(new GenerateBoilerplateCommand($configLoader, $openApiParser, $codeGenerator));
$application->setDefaultCommand('app:generate:boilerplate', true);
$application->run();