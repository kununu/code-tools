#!/usr/bin/env bash

set -euo pipefail

# Resolve project root
PROJECT_ROOT="$(git rev-parse --show-toplevel 2>/dev/null || echo "$PWD")"

# Constants
if [ -d "$PROJECT_ROOT/services/vendor/kununu/code-tools" ]; then
  readonly CONFIG_DIR="$PROJECT_ROOT/services/vendor/kununu/code-tools"
elif [ -d "$PROJECT_ROOT/vendor/kununu/code-tools" ]; then
  readonly CONFIG_DIR="$PROJECT_ROOT/vendor/kununu/code-tools"
elif [ -d "$PROJECT_ROOT" ]; then
  readonly CONFIG_DIR="$PROJECT_ROOT"
else
  echo "❌ Could not find 'vendor/kununu/code-tools'."
  exit 1
fi

readonly CONFIG_FILES=(
    "dist/php-cs-fixer.php.dist"
    "dist/phpcs.xml.dist"
    "dist/rector.php.dist"
    "dist/.editorconfig.dist"
)

# Function to display help instructions
show_help() {
    cat <<EOF
Usage: vendor/bin/code-tools publish:config [tool-name]

Valid tool names:
  cs-fixer     => copies dist/php-cs-fixer.php.dist
  code-sniffer => copies dist/phpcs.xml.dist
  rector       => copies dist/rector.php.dist
  arch-sniffer => copies dist/architecture.yaml.dist
  editorconfig => copies dist/.editorconfig.dist
EOF
}

# Function to copy a config file
copy_config_file() {
    local source_file="$CONFIG_DIR/$1"
    local dest_file="${1#dist/}"
    dest_file="${dest_file%.dist}"
    local dest_path="$PROJECT_ROOT/$dest_file"

    if [ -f "$dest_path" ]; then
        echo "⚠️  Config file '$dest_file' already exists at project level."
    elif [ -f "$source_file" ]; then
        cp "$source_file" "$dest_path"
        echo "✅ Config file '$dest_file' copied to project level."
    else
        echo "❌ Config file '$source_file' does not exist."
    fi
}

# Parse arguments
if [ "${1:-}" == "--help" ]; then
    show_help
    exit 0
fi

if [ "$#" -ne 2 ]; then
    show_help
    exit 1
fi

if [ "$1" != "publish:config" ]; then
    echo "❌ Invalid command. Valid command: publish:config"
    exit 1
fi

tool_name="$2"

case "$tool_name" in
    cs-fixer)
        copy_config_file "dist/php-cs-fixer.php.dist"
        ;;
    code-sniffer)
        copy_config_file "dist/phpcs.xml.dist"
        ;;
    rector)
        copy_config_file "dist/rector.php.dist"
        ;;
    editorconfig)
        copy_config_file "dist/.editorconfig.dist"
        ;;
    arch-sniffer)
        copy_config_file "dist/services/architecture.yaml.dist"
        ;;
    *)
        echo "❌ Invalid tool name: '$tool_name'"
        show_help
        exit 1
        ;;
esac
